- hosts: all
  become: yes
  tasks:

      - name: Remove Apache2 package
        ansible.builtin.apt:
          name: apache2
          state: absent

      - name: Update repositories
        apt: update_cache=yes
        ignore_errors: yes

      - name: Install a list of packages
        ansible.builtin.apt:
          pkg:
            - gnupg2
            - curl
            - apt-transport-https

      - name: Add repository key to the system
        ansible.builtin.command: sudo curl -o /etc/apt/trusted.gpg.d/mariadb_release_signing_key.asc 'https://mariadb.org/mariadb_release_signing_key.asc'

      - name: Install MariaDB repository
        ansible.builtin.command: sudo sh -c "echo 'deb https://mirrors.ircam.fr/pub/mariadb/repo/10.11/debian bullseye main' >>/etc/apt/sources.list"

      - name: Update repositories
        apt: update_cache=yes
        ignore_errors: yes

      - name: Install MariaDB
        ansible.builtin.apt:
          pkg:
            - mariadb-server
            - mariadb-client

#      - name: Install MariaDB Server
#        apt: name=mariadb-server state=latest

#      - name: Install MariaDB Client
#        apt: name=mariadb-client state=latest

      - name: Restart MariaDB 10.3
        service: name=mysql state=restarted

      - name: Create database
        ansible.builtin.command: sudo mariadb -u root --execute="CREATE DATABASE IF NOT EXISTS e_commerce;"

      - name: Create e_commerce user
        ansible.builtin.command: sudo mariadb -u root --execute="CREATE USER IF NOT EXISTS 'e_commerce'@'localhost' IDENTIFIED BY 'e_commerce';GRANT ALL PRIVILEGES ON e_commerce.* TO 'e_commerce'@'localhost' WITH GRANT OPTION;FLUSH PRIVILEGES;"

      - name: Add PHP repository key
        command: sudo wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg

      - name: Add PHP repository
        command: sudo sh -c 'echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" > /etc/apt/sources.list.d/php.list'

      - name: Update repositories
        apt: update_cache=yes
        ignore_errors: yes

      - name: Install packages for Nginx
        apt: name={{ item }} update_cache=yes state=latest
        with_items:
         - git
         - nginx
         - php8.2
         - php8.2-cli
         - php8.2-fpm
         - php8.2-common
         - php8.2-xml
         - php8.2-mbstring
         - php8.2-curl
         - php8.2-zip
         - php8.2-mysql

      - name: Clone project
        ansible.builtin.command: git clone https://github.com/ValentinJT/Ansible-Backend.git backend
        args:
          chdir: /var/www/

#      - name: Rename directory
#        ansible.builtin.command: mv ./Ansible-Backend ./backend
#        args:
#          chdir: /var/www/

#      - name: Move env file
#        ansible.builtin.copy:
#          src: /home/valentin/e-commerce/.env 
#          dest: /var/www/e-commerce/.env

      - name: Download composer
        ansible.builtin.get_url:
          url: https://getcomposer.org/installer
          dest: /tmp/composer-installer

      - name: Install composer
        ansible.builtin.command: "php /tmp/composer-installer --install-dir=/usr/local/bin/ --filename=composer"
        args:
          creates: /usr/local/bin/composer
      
      - name: Download and installs all libs and dependencies
        community.general.composer:
          command: install
#          composer_executable: /usr/local/bin/composer/composer.phar
          working_dir: /var/www/backend/
          no_dev: false
        environment:
          COMPOSER_ALLOW_SUPERUSER: "1"

      - name: Doctrine | Execute migrations
        command: "php /var/www/backend/bin/console doctrine:migrations:migrate --no-interaction"
      
      - name: LexikJWT | Generate keys
        command: "php /var/www/backend/bin/console lexik:jwt:generate-keypair --overwrite"
      
      - name: Move Nginx config
        ansible.builtin.copy:
          src: ./nginx.conf
          dest: /etc/nginx/sites-available/default
          owner: root
          group: root
          mode: 0755

      - name: restart nginx
        service: name=nginx state=restarted enabled=yes

      - name: Move Nginx config
        ansible.builtin.copy:
          src: ./nginx.conf
          dest: /etc/nginx/sites-available/default
          owner: root
          group: root
          mode: 0755
